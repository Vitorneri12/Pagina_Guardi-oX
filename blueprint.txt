🏗️ GUARDIÃO SYSTEM - TECHNICAL BLUEPRINT

  📋 1. SYSTEM ARCHITECTURE OVERVIEW

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                            GUARDIÃO ECOSYSTEM                               │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │  ┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐         │
  │  │   FRONTEND      │    │     BACKEND     │    │   AI AGENTS     │         │
  │  │                 │    │                 │    │                 │         │
  │  │ React/Vite      │◄──►│ Flask + FastAPI │◄──►│ Multi-Agent AI  │         │
  │  │ Landing Page    │    │ Main API        │    │ Coordination    │         │
  │  │ Port: 8080      │    │ Port: 8000      │    │ Internal        │         │
  │  └─────────────────┘    └─────────────────┘    └─────────────────┘         │
  │           │                       │                       │                 │
  │           │                       ▼                       │                 │
  │           │              ┌─────────────────┐              │                 │
  │           │              │   DATABASES     │              │                 │
  │           │              │                 │              │                 │
  │           │              │ PostgreSQL      │              │                 │
  │           │              │ + Redis Cache   │              │                 │
  │           │              │ Ports: 5432,6379│              │                 │
  │           │              └─────────────────┘              │                 │
  │           │                                               │                 │
  │           └───────────────────────┬───────────────────────┘                 │
  │                                   │                                         │
  │                                   ▼                                         │
  │                          ┌─────────────────┐                                │
  │                          │ EXTERNAL APIs   │                                │
  │                          │                 │                                │
  │                          │ • NVIDIA AI     │                                │
  │                          │ • Scrapers      │                                │
  │                          │ • ML Models     │                                │
  │                          └─────────────────┘                                │
  └─────────────────────────────────────────────────────────────────────────────┘

  🔄 2. DATA FLOW DIAGRAM

  USER REQUEST
       │
       ▼
  ┌─────────────────┐      HTTP/REST      ┌─────────────────┐
  │   FRONTEND      │ ──────────────────► │   FLASK API     │
  │                 │                     │                 │
  │ • Landing Page  │                     │ • Auth Routes   │
  │ • Dashboard     │                     │ • Main Routes   │
  │ • Search Forms  │                     │ • API Routes    │
  └─────────────────┘                     └─────────────────┘
                                                   │
                                                   ▼
                                          ┌─────────────────┐
                                          │ ANALYSIS ENGINE │
                                          │                 │
                                          │ • Session Mgmt  │
                                          │ • Product Parse │
                                          │ • Risk Calc     │
                                          └─────────────────┘
                                                   │
                                      ┌────────────┼────────────┐
                                      │            │            │
                                      ▼            ▼            ▼
                              ┌─────────────┐ ┌─────────────┐ ┌─────────────┐
                              │  SCRAPERS   │ │ AI AGENTS   │ │ DATABASE    │
                              │             │ │             │ │             │
                              │ • Selenium  │ │ • Coord     │ │ • Products  │
                              │ • ML/Amazon │ │ • Brand     │ │ • Sessions  │
                              │ • Data Val  │ │ • Vision    │ │ • Analysis  │
                              └─────────────┘ │ • Market    │ │ • Users     │
                                             └─────────────┘ └─────────────┘
                                                      │
                                                      ▼
                                             ┌─────────────────┐
                                             │ NVIDIA/ML APIs  │
                                             │                 │
                                             │ • Image Analysis│
                                             │ • Text Analysis │
                                             │ • Authenticity  │
                                             └─────────────────┘

  🤖 3. AI AGENTS ARCHITECTURE

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                        MULTI-AGENT AI SYSTEM                                │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │                         ┌─────────────────┐                                │
  │                         │ COORDINATOR     │                                │
  │                         │ AGENT           │                                │
  │                         │                 │                                │
  │                         │ • Orchestrates  │                                │
  │                         │ • Integrates    │                                │
  │                         │ • Scores        │                                │
  │                         └─────────────────┘                                │
  │                                   │                                         │
  │                 ┌─────────────────┼─────────────────┐                      │
  │                 │                 │                 │                      │
  │                 ▼                 ▼                 ▼                      │
  │        ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐        │
  │        │ BRAND DETECTION │ │ NVIDIA VISION   │ │ MARKETPLACE     │        │
  │        │ AGENT           │ │ AGENT           │ │ ANALYSIS AGENT  │        │
  │        │                 │ │                 │ │                 │        │
  │        │ • Price Check   │ │ • Image Analysis│ │ • Seller Check  │        │
  │        │ • Brand Valid   │ │ • OCR Text      │ │ • Reviews Anal  │        │
  │        │ • Official Data │ │ • Authenticity  │ │ • Patterns     │        │
  │        └─────────────────┘ └─────────────────┘ └─────────────────┘        │
  │                 │                 │                 │                      │
  │                 └─────────────────┼─────────────────┘                      │
  │                                   │                                         │
  │                                   ▼                                         │
  │                          ┌─────────────────┐                               │
  │                          │ ANALYSIS RESULT │                               │
  │                          │                 │                               │
  │                          │ • Risk Score    │                               │
  │                          │ • Evidence      │                               │
  │                          │ • Confidence    │                               │
  │                          └─────────────────┘                               │
  └─────────────────────────────────────────────────────────────────────────────┘

  🗄️ 4. DATABASE SCHEMA OVERVIEW

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                           DATABASE SCHEMA                                   │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │  ┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐         │
  │  │     USERS       │    │    SESSIONS     │    │    PRODUCTS     │         │
  │  │                 │    │                 │    │                 │         │
  │  │ • id (PK)       │───►│ • id (PK)       │◄──►│ • id (PK)       │         │
  │  │ • username      │    │ • user_id (FK)  │    │ • session_id(FK)│         │
  │  │ • email         │    │ • name          │    │ • url           │         │
  │  │ • password_hash │    │ • description   │    │ • title         │         │
  │  │ • role          │    │ • created_at    │    │ • price         │         │
  │  │ • created_at    │    │ • status        │    │ • marketplace   │         │
  │  └─────────────────┘    └─────────────────┘    │ • brand         │         │
  │                                                │ • risk_level    │         │
  │                                                │ • created_at    │         │
  │                                                └─────────────────┘         │
  │                                                         │                   │
  │                                                         ▼                   │
  │  ┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐         │
  │  │   CORRECTIONS   │    │ PRODUCT_ANALYSIS│    │   SCREENSHOTS   │         │
  │  │                 │    │                 │    │                 │         │
  │  │ • id (PK)       │    │ • id (PK)       │    │ • id (PK)       │         │
  │  │ • product_id(FK)│◄───│ • product_id(FK)│───►│ • product_id(FK)│         │
  │  │ • user_id (FK)  │    │ • analysis_data │    │ • image_path    │         │
  │  │ • old_risk      │    │ • confidence    │    │ • timestamp     │         │
  │  │ • new_risk      │    │ • agent_results │    │ • file_size     │         │
  │  │ • reasoning     │    │ • created_at    │    └─────────────────┘         │
  │  │ • created_at    │    └─────────────────┘                                │
  │  └─────────────────┘                                                       │
  │                                                                             │
  │  ┌─────────────────┐    ┌─────────────────┐                                │
  │  │   STATISTICS    │    │   SYSTEM_LOGS   │                                │
  │  │                 │    │                 │                                │
  │  │ • id (PK)       │    │ • id (PK)       │                                │
  │  │ • session_id(FK)│    │ • level         │                                │
  │  │ • total_products│    │ • message       │                                │
  │  │ • high_risk     │    │ • timestamp     │                                │
  │  │ • medium_risk   │    │ • user_id (FK)  │                                │
  │  │ • low_risk      │    │ • ip_address    │                                │
  │  │ • avg_confidence│    └─────────────────┘                                │
  │  │ • created_at    │                                                       │
  │  └─────────────────┘                                                       │
  └─────────────────────────────────────────────────────────────────────────────┘

  🔌 5. API ARCHITECTURE

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                              API ENDPOINTS                                  │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │  ┌─────────────────┐                                                        │
  │  │ AUTHENTICATION  │                                                        │
  │  │                 │                                                        │
  │  │ POST /login     │ ── User Authentication                                 │
  │  │ POST /logout    │ ── Session Termination                                 │
  │  │ POST /register  │ ── User Registration                                   │
  │  │ GET  /profile   │ ── User Profile Data                                   │
  │  └─────────────────┘                                                        │
  │                                                                             │
  │  ┌─────────────────┐                                                        │
  │  │ MAIN ANALYSIS   │                                                        │
  │  │                 │                                                        │
  │  │ GET  /          │ ── Dashboard Home                                      │
  │  │ POST /analyze   │ ── Single Product Analysis                             │
  │  │ POST /bulk      │ ── Bulk Product Analysis                               │
  │  │ GET  /sessions  │ ── Session Management                                  │
  │  │ GET  /results   │ ── Analysis Results                                    │
  │  │ POST /correct   │ ── Manual Corrections                                  │
  │  └─────────────────┘                                                        │
  │                                                                             │
  │  ┌─────────────────┐                                                        │
  │  │ AI AGENTS API   │                                                        │
  │  │                 │                                                        │
  │  │ POST /agents/analyze     │ ── Multi-Agent Analysis                       │
  │  │ GET  /agents/status      │ ── Agent Health Check                         │
  │  │ POST /agents/brand       │ ── Brand Detection                            │
  │  │ POST /agents/vision      │ ── Image Analysis                             │
  │  │ POST /agents/marketplace │ ── Marketplace Analysis                       │
  │  └─────────────────┘                                                        │
  │                                                                             │
  │  ┌─────────────────┐                                                        │
  │  │ REPORTS & DATA  │                                                        │
  │  │                 │                                                        │
  │  │ GET  /reports/pdf     │ ── PDF Report Generation                         │
  │  │ GET  /export/csv      │ ── CSV Data Export                               │
  │  │ GET  /statistics      │ ── Analytics Dashboard                          │
  │  │ GET  /screenshots     │ ── Evidence Gallery                              │
  │  └─────────────────┘                                                        │
  │                                                                             │
  │  ┌─────────────────┐                                                        │
  │  │ ADMIN & SYSTEM  │                                                        │
  │  │                 │                                                        │
  │  │ GET  /admin          │ ── Admin Dashboard                                │
  │  │ GET  /health         │ ── System Health                                  │
  │  │ POST /backup         │ ── Database Backup                                │
  │  │ GET  /logs           │ ── System Logs                                    │
  │  └─────────────────┘                                                        │
  └─────────────────────────────────────────────────────────────────────────────┘

  🐳 6. DEPLOYMENT ARCHITECTURE

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                        DOCKER DEPLOYMENT TOPOLOGY                           │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │                              HOST MACHINE                                  │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │                         DOCKER NETWORK                                  │
  │  │  ┌─────────────────────────────────────────────────────────────────────┤
  │  │  │                                                                     │
  │  │  │  ┌─────────────────┐    ┌─────────────────┐                        │
  │  │  │  │ FRONTEND        │    │ BACKEND         │                        │
  │  │  │  │ Container       │    │ Container       │                        │
  │  │  │  │                 │    │                 │                        │
  │  │  │  │ • Nginx         │    │ • Flask App     │                        │
  │  │  │  │ • React Build   │    │ • FastAPI       │                        │
  │  │  │  │ • Port: 8080    │    │ • AI Agents     │                        │
  │  │  │  │ • Health Check  │    │ • Port: 8000    │                        │
  │  │  │  └─────────────────┘    │ • Health Check  │                        │
  │  │  │                         └─────────────────┘                        │
  │  │  │                                   │                                 │
  │  │  │  ┌─────────────────┐             │             ┌─────────────────┐  │
  │  │  │  │ POSTGRES        │◄────────────┼────────────►│ REDIS           │  │
  │  │  │  │ Container       │             │             │ Container       │  │
  │  │  │  │                 │             │             │                 │  │
  │  │  │  │ • Database      │             │             │ • Cache         │  │
  │  │  │  │ • Persistent    │             │             │ • Sessions      │  │
  │  │  │  │ • Port: 5432    │             │             │ • Port: 6379    │  │
  │  │  │  │ • Volume Mount  │             │             │ • Memory Store  │  │
  │  │  │  └─────────────────┘             │             └─────────────────┘  │
  │  │  │                                  │                                 │
  │  │  │  ┌─────────────────────────────────────────────────────────────────┤
  │  │  │  │                    SHARED VOLUMES                               │
  │  │  │  │                                                                 │
  │  │  │  │  • ./app/static:/app/app/static  (Screenshots & Reports)       │
  │  │  │  │  • ./ml/models:/app/ml/models    (AI Models & Training Data)   │
  │  │  │  │  • postgres_data:/var/lib/postgresql/data (DB Persistence)     │
  │  │  │  └─────────────────────────────────────────────────────────────────┤
  │  │  └─────────────────────────────────────────────────────────────────────┘
  │  └─────────────────────────────────────────────────────────────────────────┘
  │                                                                             │
  │                         EXTERNAL CONNECTIONS                               │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │                                                                         │
  │  │  Internet ◄──► Nginx (8080) ◄──► React Frontend                        │
  │  │  Internet ◄──► Gunicorn (8000) ◄──► Flask/FastAPI Backend              │
  │  │  Backend ◄──► NVIDIA API (External)                                     │
  │  │  Backend ◄──► ML Services (External)                                    │
  │  │  Backend ◄──► E-commerce APIs (External)                                │
  │  │                                                                         │
  │  └─────────────────────────────────────────────────────────────────────────┘
  └─────────────────────────────────────────────────────────────────────────────┘

  🔧 7. TECHNOLOGY STACK BLUEPRINT

  ┌─────────────────────────────────────────────────────────────────────────────┐
  │                           TECHNOLOGY STACK                                  │
  ├─────────────────────────────────────────────────────────────────────────────┤
  │                                                                             │
  │  PRESENTATION LAYER                                                         │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │ • React 18+ with TypeScript                                             │
  │  │ • Vite build system                                                     │
  │  │ • Modern CSS with responsive design                                     │
  │  │ • Chart.js for data visualization                                       │
  │  │ • Axios for HTTP client                                                 │
  │  └─────────────────────────────────────────────────────────────────────────┘
  │                                                                             │
  │  APPLICATION LAYER                                                          │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │ • Flask 2.3+ with Blueprints                                           │
  │  │ • FastAPI for high-performance endpoints                               │
  │  │ • SQLAlchemy ORM with Alembic migrations                               │
  │  │ • Flask-Login for authentication                                       │
  │  │ • Gunicorn WSGI server                                                 │
  │  └─────────────────────────────────────────────────────────────────────────┘
  │                                                                             │
  │  AI/ML LAYER                                                               │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │ • NVIDIA AI APIs for image analysis                                    │
  │  │ • Scikit-learn for classification                                      │
  │  │ • OpenCV for image processing                                          │
  │  │ • Custom multi-agent architecture                                      │
  │  │ • Selenium for dynamic web scraping                                    │
  │  └─────────────────────────────────────────────────────────────────────────┘
  │                                                                             │
  │  DATA LAYER                                                                │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │ • PostgreSQL 13 with advanced indexing                                 │
  │  │ • Redis for caching and session management                             │
  │  │ • JSON columns for flexible data storage                               │
  │  │ • Automated backups and migrations                                     │
  │  └─────────────────────────────────────────────────────────────────────────┘
  │                                                                             │
  │  INFRASTRUCTURE LAYER                                                       │
  │  ┌─────────────────────────────────────────────────────────────────────────┤
  │  │ • Docker & Docker Compose                                              │
  │  │ • Nginx reverse proxy                                                  │
  │  │ • Health checks and monitoring                                         │
  │  │ • Volume management for persistence                                    │
  │  │ • Environment-based configuration                                      │
  │  └─────────────────────────────────────────────────────────────────────────┘
  └─────────────────────────────────────────────────────────────────────────────┘

  📁 8. FILE STRUCTURE BLUEPRINT

  GUARDIÃO_SISTEMA/
  ├── 🐳 docker-compose.yml          # Container orchestration
  ├── 🐳 Dockerfile                  # Backend container definition
  ├── 📋 requirements.txt            # Python dependencies
  ├── 🚀 run.py                      # Application entry point
  │
  ├── 📁 app/                        # Main Flask application
  │   ├── 🏠 __init__.py             # App factory
  │   ├── 🔐 auth/                   # Authentication module
  │   ├── 🌐 routes/                 # API endpoints
  │   ├── 🗄️ models.py               # Database models
  │   ├── 📊 analysis.py             # Core analysis engine
  │   └── 📁 static/                 # Static files & screenshots
  │
  ├── 🤖 agents/                     # AI Agents system
  │   ├── 🎯 coordinator.py          # Agent orchestrator
  │   ├── 🏷️ brand_detection.py      # Brand analysis agent
  │   ├── 👁️ nvidia_vision.py        # Image analysis agent
  │   └── 🛒 marketplace_analysis.py # Marketplace intelligence
  │
  ├── 🕷️ scrapers/                   # Web scraping modules
  │   ├── 🛍️ mercadolivre.py         # MercadoLivre scraper
  │   └── 📦 amazon.py               # Amazon scraper
  │
  ├── 🧠 ml/                         # Machine learning
  │   ├── 📁 models/                 # Trained models
  │   └── 🎯 classifier.py           # ML classification
  │
  ├── 🌐 guardiao_frontlanding/      # Frontend application
  │   ├── 🐳 Dockerfile              # Frontend container
  │   ├── ⚡ vite.config.ts          # Vite configuration
  │   ├── 📁 src/                    # React source code
  │   └── 📁 public/                 # Static assets
  │
  └── 🚀 deploy/                     # Deployment configurations
      ├── 🐳 docker/                 # Docker configurations
      └── 📜 scripts/                # Deployment scripts

  Este blueprint técnico fornece uma visão completa da arquitetura do Sistema Guardião, incluindo todos os componentes, fluxos de dados, APIs e estrutura de deployment. É ideal para desenvolvedores entenderem
  como o sistema funciona e para apresentações técnicas.

